@model MVC_EF.ViewModels.ContactAddressViewModel

@{
    ViewBag.Title = "CreateWithAddress";
}

<h2>CreateWithAddress</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contact</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AreaID, "AreaID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AreaID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.AddressDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressDescription, new { htmlAttributes = new { @id = "AddressDescription", @class = "form-control" } })
                @Html.ValidationMessage("Add_Address", null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="add_address" name="action">
                    Add address
                </button>
            </div>
        </div>

        <hr />

        <ul>
            @foreach (var d in Model.Addresses)
            {
                var i = Model.Addresses.IndexOf(d);

                <li class="list-group-item">
                    <!-- Modelo -->
                    @Html.Hidden("Addresses[" + i + "].Description", d.Description)
                    @Html.Hidden("Addresses[" + i + "].Remove", d.Remove, new { @class = "remove_address" })

                    <div class="row">
                        <div class="col-xs-1 text-right">
                            <button class="btn_remove_address" type="submit" value="remove_address" name="action">
                                <i class="glyphicon glyphicon-remove"></i>
                            </button>
                        </div>
                        <div class="col-xs-5">
                            @d.Description
                        </div>
                    </div>
                </li>
            }
        </ul>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ValidationMessage("Contact", null, new { @class = "label label-danger" })
                <button type="submit" value="save" name="action">
                    Save
                </button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="@Url.Content("~/Scripts/Views/Contact/CreateWithAddress.js")"></script>
}
